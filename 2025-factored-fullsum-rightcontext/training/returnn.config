#!rnn.py


import numpy as np

from returnn.tf.util.data import Dim

__time_tag__ = Dim(dimension=None, kind=Dim.Types.Spatial, description="time")


import sys

sys.setrecursionlimit(10**6)


batch_size = 10000
batching = "random"
cache_size = "0"
cleanup_old_models = {
    "keep": [
        490,
        491,
        492,
        493,
        494,
        495,
        496,
        497,
        498,
        499,
        500,
        50,
        100,
        150,
        200,
        250,
        300,
        350,
        400,
        450,
    ],
    "keep_best_n": 3,
}
dev = {
    "class": "ExternSprintDataset",
    "partitionEpoch": 1,
    "sprintConfigStr": "--config=rasr.dev.config --*.LOGFILE=nn-trainer.dev.log --*.TASK=1 ",
    "sprintTrainerExecPath": "/work/tools/users/raissi/rasr/rasr_tf2/arch/linux-x86_64-standard/nn-trainer.linux-x86_64-standard",
}
device = "gpu"
extern_data = {"data": {"dim": 50, "same_dim_tags_as": {"T": __time_tag__}}}
gradient_clip = 20.0
gradient_noise = 0.0
learning_rate_control = "constant"
learning_rate_file = "lr.log"
learning_rates = [
    2.2577777777777778e-05,
    2.5155555555555558e-05,
    2.7733333333333334e-05,
    3.031111111111111e-05,
    3.288888888888889e-05,
    3.546666666666667e-05,
    3.804444444444445e-05,
    4.062222222222222e-05,
    4.32e-05,
    4.5777777777777776e-05,
    4.835555555555556e-05,
    5.093333333333333e-05,
    5.351111111111111e-05,
    5.6088888888888895e-05,
    5.8666666666666665e-05,
    6.124444444444445e-05,
    6.382222222222222e-05,
    6.64e-05,
    6.897777777777778e-05,
    7.155555555555555e-05,
    7.413333333333334e-05,
    7.671111111111111e-05,
    7.928888888888889e-05,
    8.186666666666666e-05,
    8.444444444444444e-05,
    8.702222222222221e-05,
    8.96e-05,
    9.217777777777778e-05,
    9.475555555555555e-05,
    9.733333333333333e-05,
    9.99111111111111e-05,
    0.00010248888888888888,
    0.00010506666666666667,
    0.00010764444444444444,
    0.00011022222222222222,
    0.00011279999999999999,
    0.00011537777777777777,
    0.00011795555555555556,
    0.00012053333333333333,
    0.0001231111111111111,
    0.0001256888888888889,
    0.00012826666666666668,
    0.00013084444444444446,
    0.00013342222222222222,
    0.000136,
    0.00013857777777777778,
    0.00014115555555555557,
    0.00014373333333333332,
    0.0001463111111111111,
    0.0001488888888888889,
    0.00015146666666666667,
    0.00015404444444444443,
    0.0001566222222222222,
    0.0001592,
    0.00016177777777777778,
    0.00016435555555555556,
    0.00016693333333333332,
    0.0001695111111111111,
    0.00017208888888888888,
    0.00017466666666666667,
    0.00017724444444444445,
    0.0001798222222222222,
    0.0001824,
    0.00018497777777777777,
    0.00018755555555555555,
    0.00019013333333333334,
    0.0001927111111111111,
    0.00019528888888888888,
    0.00019786666666666666,
    0.00020044444444444444,
    0.00020302222222222223,
    0.00020559999999999998,
    0.00020817777777777777,
    0.00021075555555555555,
    0.00021333333333333333,
    0.00021591111111111112,
    0.00021848888888888887,
    0.00022106666666666666,
    0.00022364444444444444,
    0.00022622222222222222,
    0.0002288,
    0.00023137777777777776,
    0.00023395555555555554,
    0.00023653333333333333,
    0.0002391111111111111,
    0.0002416888888888889,
    0.0002442666666666667,
    0.00024684444444444443,
    0.00024942222222222224,
    0.000252,
    0.0002545777777777778,
    0.00025715555555555557,
    0.0002597333333333333,
    0.00026231111111111113,
    0.0002648888888888889,
    0.00026746666666666664,
    0.00027004444444444446,
    0.0002726222222222222,
    0.00027519999999999997,
    0.0002777777777777778,
    0.00028035555555555553,
    0.00028293333333333334,
    0.0002855111111111111,
    0.00028808888888888886,
    0.00029066666666666667,
    0.0002932444444444444,
    0.00029582222222222223,
    0.0002984,
    0.00030097777777777775,
    0.00030355555555555556,
    0.0003061333333333333,
    0.0003087111111111111,
    0.0003112888888888889,
    0.00031386666666666663,
    0.00031644444444444444,
    0.0003190222222222222,
    0.0003216,
    0.00032417777777777777,
    0.0003267555555555555,
    0.00032933333333333333,
    0.0003319111111111111,
    0.0003344888888888889,
    0.00033706666666666666,
    0.0003396444444444444,
    0.0003422222222222222,
    0.0003448,
    0.0003473777777777778,
    0.00034995555555555554,
    0.0003525333333333333,
    0.0003551111111111111,
    0.00035768888888888887,
    0.0003602666666666667,
    0.00036284444444444443,
    0.0003654222222222222,
    0.000368,
    0.00037057777777777776,
    0.00037315555555555557,
    0.0003757333333333333,
    0.0003783111111111111,
    0.0003808888888888889,
    0.00038346666666666665,
    0.00038604444444444446,
    0.0003886222222222222,
    0.00039119999999999997,
    0.0003937777777777778,
    0.00039635555555555553,
    0.00039893333333333334,
    0.0004015111111111111,
    0.00040408888888888886,
    0.00040666666666666667,
    0.0004092444444444444,
    0.00041182222222222223,
    0.0004144,
    0.00041697777777777775,
    0.00041955555555555556,
    0.0004221333333333333,
    0.0004247111111111111,
    0.0004272888888888889,
    0.00042986666666666663,
    0.00043244444444444445,
    0.0004350222222222222,
    0.0004376,
    0.00044017777777777777,
    0.0004427555555555555,
    0.00044533333333333333,
    0.0004479111111111111,
    0.0004504888888888889,
    0.00045306666666666666,
    0.0004556444444444444,
    0.0004582222222222222,
    0.0004608,
    0.0004633777777777778,
    0.00046595555555555555,
    0.0004685333333333333,
    0.0004711111111111111,
    0.00047368888888888887,
    0.0004762666666666667,
    0.00047884444444444443,
    0.0004814222222222222,
    0.000484,
    0.00048657777777777776,
    0.0004891555555555556,
    0.0004917333333333333,
    0.0004943111111111111,
    0.0004968888888888889,
    0.0004994666666666667,
    0.0005020444444444445,
    0.0005046222222222222,
    0.0005072,
    0.0005097777777777778,
    0.0005123555555555556,
    0.0005149333333333333,
    0.0005175111111111111,
    0.000520088888888889,
    0.0005226666666666667,
    0.0005252444444444445,
    0.0005278222222222222,
    0.0005304,
    0.0005329777777777779,
    0.0005355555555555556,
    0.0005381333333333334,
    0.0005407111111111111,
    0.0005432888888888889,
    0.0005458666666666667,
    0.0005484444444444445,
    0.0005510222222222223,
    0.0005536,
    0.0005561777777777778,
    0.0005587555555555556,
    0.0005613333333333334,
    0.0005639111111111111,
    0.0005664888888888889,
    0.0005690666666666667,
    0.0005716444444444445,
    0.0005742222222222223,
    0.0005768,
    0.0005793777777777778,
    0.0005819555555555555,
    0.0005845333333333334,
    0.0005871111111111112,
    0.0005896888888888889,
    0.0005922666666666667,
    0.0005948444444444444,
    0.0005974222222222223,
    0.0006000000000000001,
    0.0005974222222222222,
    0.0005948444444444444,
    0.0005922666666666666,
    0.0005896888888888888,
    0.0005871111111111111,
    0.0005845333333333333,
    0.0005819555555555555,
    0.0005793777777777777,
    0.0005767999999999999,
    0.0005742222222222222,
    0.0005716444444444444,
    0.0005690666666666667,
    0.0005664888888888888,
    0.000563911111111111,
    0.0005613333333333333,
    0.0005587555555555555,
    0.0005561777777777778,
    0.0005535999999999999,
    0.0005510222222222221,
    0.0005484444444444444,
    0.0005458666666666666,
    0.0005432888888888889,
    0.000540711111111111,
    0.0005381333333333333,
    0.0005355555555555555,
    0.0005329777777777777,
    0.0005304,
    0.0005278222222222221,
    0.0005252444444444444,
    0.0005226666666666666,
    0.0005200888888888889,
    0.0005175111111111111,
    0.0005149333333333332,
    0.0005123555555555555,
    0.0005097777777777777,
    0.0005072,
    0.0005046222222222222,
    0.0005020444444444443,
    0.0004994666666666666,
    0.0004968888888888888,
    0.0004943111111111111,
    0.0004917333333333333,
    0.0004891555555555555,
    0.0004865777777777777,
    0.00048399999999999995,
    0.0004814222222222222,
    0.0004788444444444444,
    0.0004762666666666666,
    0.0004736888888888888,
    0.00047111111111111106,
    0.0004685333333333333,
    0.00046595555555555555,
    0.00046337777777777774,
    0.0004607999999999999,
    0.00045822222222222217,
    0.0004556444444444444,
    0.00045306666666666666,
    0.00045048888888888885,
    0.00044791111111111104,
    0.0004453333333333333,
    0.0004427555555555555,
    0.00044017777777777777,
    0.00043759999999999996,
    0.00043502222222222215,
    0.0004324444444444444,
    0.00042986666666666663,
    0.0004272888888888889,
    0.00042471111111111107,
    0.00042213333333333326,
    0.0004195555555555555,
    0.00041697777777777775,
    0.0004144,
    0.0004118222222222222,
    0.00040924444444444437,
    0.0004066666666666666,
    0.00040408888888888886,
    0.0004015111111111111,
    0.0003989333333333333,
    0.0003963555555555555,
    0.0003937777777777777,
    0.00039119999999999997,
    0.0003886222222222222,
    0.0003860444444444444,
    0.0003834666666666666,
    0.00038088888888888884,
    0.0003783111111111111,
    0.0003757333333333333,
    0.0003731555555555555,
    0.0003705777777777777,
    0.00036799999999999995,
    0.0003654222222222222,
    0.00036284444444444443,
    0.0003602666666666666,
    0.0003576888888888888,
    0.00035511111111111106,
    0.0003525333333333333,
    0.0003499555555555555,
    0.00034737777777777773,
    0.0003448,
    0.00034222222222222217,
    0.0003396444444444444,
    0.0003370666666666666,
    0.00033448888888888885,
    0.0003319111111111111,
    0.0003293333333333333,
    0.0003267555555555555,
    0.0003241777777777777,
    0.00032159999999999996,
    0.0003190222222222222,
    0.0003164444444444444,
    0.00031386666666666663,
    0.0003112888888888888,
    0.00030871111111111107,
    0.0003061333333333333,
    0.0003035555555555555,
    0.00030097777777777775,
    0.00029839999999999993,
    0.0002958222222222222,
    0.0002932444444444444,
    0.0002906666666666666,
    0.00028808888888888886,
    0.00028551111111111105,
    0.0002829333333333333,
    0.00028035555555555553,
    0.0002777777777777777,
    0.00027519999999999997,
    0.00027262222222222216,
    0.0002700444444444444,
    0.00026746666666666664,
    0.00026488888888888883,
    0.0002623111111111111,
    0.00025973333333333327,
    0.0002571555555555555,
    0.00025457777777777776,
    0.00025199999999999995,
    0.0002494222222222222,
    0.0002468444444444444,
    0.0002442666666666666,
    0.00024168888888888887,
    0.00023911111111111106,
    0.0002365333333333333,
    0.0002339555555555555,
    0.00023137777777777773,
    0.00022879999999999998,
    0.00022622222222222217,
    0.0002236444444444444,
    0.0002210666666666666,
    0.00021848888888888884,
    0.0002159111111111111,
    0.00021333333333333328,
    0.00021075555555555552,
    0.0002081777777777777,
    0.00020559999999999996,
    0.0002030222222222222,
    0.0002004444444444444,
    0.00019786666666666663,
    0.00019528888888888882,
    0.00019271111111111107,
    0.0001901333333333333,
    0.0001875555555555555,
    0.00018497777777777774,
    0.00018239999999999993,
    0.00017982222222222218,
    0.00017724444444444442,
    0.0001746666666666666,
    0.00017208888888888886,
    0.00016951111111111105,
    0.0001669333333333333,
    0.00016435555555555553,
    0.00016177777777777772,
    0.00015919999999999997,
    0.00015662222222222216,
    0.0001540444444444444,
    0.00015146666666666664,
    0.00014888888888888883,
    0.00014631111111111108,
    0.00014373333333333327,
    0.0001411555555555555,
    0.00013857777777777776,
    0.00013599999999999994,
    0.0001334222222222222,
    0.00013084444444444438,
    0.00012826666666666662,
    0.00012568888888888887,
    0.00012311111111111106,
    0.0001205333333333333,
    0.00011795555555555549,
    0.00011537777777777773,
    0.00011279999999999998,
    0.00011022222222222217,
    0.00010764444444444441,
    0.00010506666666666665,
    0.0001024888888888889,
    9.991111111111103e-05,
    9.733333333333328e-05,
    9.475555555555552e-05,
    9.217777777777777e-05,
    8.960000000000001e-05,
    8.702222222222214e-05,
    8.444444444444439e-05,
    8.186666666666663e-05,
    7.928888888888888e-05,
    7.671111111111112e-05,
    7.413333333333326e-05,
    7.15555555555555e-05,
    6.897777777777774e-05,
    6.639999999999999e-05,
    6.382222222222223e-05,
    6.124444444444437e-05,
    5.866666666666661e-05,
    5.6088888888888855e-05,
    5.35111111111111e-05,
    5.093333333333334e-05,
    4.835555555555548e-05,
    4.577777777777772e-05,
    4.3199999999999966e-05,
    4.062222222222221e-05,
    3.8044444444444454e-05,
    3.546666666666659e-05,
    3.288888888888883e-05,
    3.0311111111111077e-05,
    2.773333333333332e-05,
    2.5155555555555565e-05,
    2.25777777777777e-05,
    1.9999999999999944e-05,
    1.9999999999999944e-05,
    1.9612244897959128e-05,
    1.9224489795918312e-05,
    1.88367346938775e-05,
    1.8448979591836684e-05,
    1.8061224489795868e-05,
    1.7673469387755052e-05,
    1.7285714285714236e-05,
    1.6897959183673424e-05,
    1.6510204081632608e-05,
    1.6122448979591792e-05,
    1.5734693877550976e-05,
    1.534693877551016e-05,
    1.4959183673469348e-05,
    1.4571428571428532e-05,
    1.4183673469387716e-05,
    1.37959183673469e-05,
    1.3408163265306086e-05,
    1.3020408163265272e-05,
    1.2632653061224456e-05,
    1.224489795918364e-05,
    1.1857142857142826e-05,
    1.146938775510201e-05,
    1.1081632653061194e-05,
    1.069387755102038e-05,
    1.0306122448979564e-05,
    9.91836734693875e-06,
    9.530612244897934e-06,
    9.142857142857118e-06,
    8.755102040816304e-06,
    8.367346938775488e-06,
    7.979591836734674e-06,
    7.591836734693858e-06,
    7.2040816326530426e-06,
    6.816326530612228e-06,
    6.4285714285714125e-06,
    6.040816326530598e-06,
    5.6530612244897825e-06,
    5.265306122448967e-06,
    4.8775510204081525e-06,
    4.489795918367337e-06,
    4.102040816326521e-06,
    3.7142857142857082e-06,
    3.3265306122448924e-06,
    2.9387755102040765e-06,
    2.5510204081632607e-06,
    2.163265306122445e-06,
    1.7755102040816323e-06,
    1.3877551020408165e-06,
    1e-06,
]
log = ["./returnn.log"]
log_verbosity = 3
min_learning_rate = 1e-06
model = "/u/raissi/setups/librispeech/960h/work/i6_experiments/users/raissi/costum/returnn/rasr_returnn_bw/ReturnnRasrTrainingBWJob.qckoKdPLkSdj/output/models/epoch"
n_contexts = 42
n_states_per_phone = 1
network = {
    "center-output": {"class": "softmax", "from": "linear2-diphone", "n_out": 84},
    "conformer_10_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_10_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_10_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_10_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_10_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_10_convmod_1_pointwise_conv_2",
    },
    "conformer_10_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_10_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_10_convmod_1_input": {
        "class": "copy",
        "from": "conformer_10_ffmod_1_res_add",
    },
    "conformer_10_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_10_convmod_1_input",
    },
    "conformer_10_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_10_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_10_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_10_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_10_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_10_convmod_1_dropout", "conformer_10_convmod_1_input"],
        "kind": "add",
    },
    "conformer_10_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_10_convmod_1_bn",
    },
    "conformer_10_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_10_ffmod_1_ff_2",
    },
    "conformer_10_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_10_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_10_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_10_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_10_ffmod_1_input": {"class": "copy", "from": "conformer_9_output"},
    "conformer_10_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_10_ffmod_1_input",
    },
    "conformer_10_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_10_ffmod_1_dropout", "conformer_10_ffmod_1_input"],
    },
    "conformer_10_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_10_ffmod_2_ff_2",
    },
    "conformer_10_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_10_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_10_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_10_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_10_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_10_mhsamod_res_add",
    },
    "conformer_10_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_10_ffmod_2_input",
    },
    "conformer_10_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_10_ffmod_2_dropout", "conformer_10_ffmod_2_input"],
    },
    "conformer_10_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_10_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_10_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_10_mhsamod_att_linear",
    },
    "conformer_10_mhsamod_input": {
        "class": "copy",
        "from": "conformer_10_convmod_1_res_add",
    },
    "conformer_10_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_10_mhsamod_input",
    },
    "conformer_10_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_10_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_10_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_10_mhsamod_dropout", "conformer_10_mhsamod_input"],
        "kind": "add",
    },
    "conformer_10_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_10_mhsamod_ln",
        "key_shift": "conformer_10_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_10_output": {
        "class": "layer_norm",
        "from": "conformer_10_ffmod_2_res_add",
    },
    "conformer_11_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_11_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_11_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_11_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_11_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_11_convmod_1_pointwise_conv_2",
    },
    "conformer_11_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_11_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_11_convmod_1_input": {
        "class": "copy",
        "from": "conformer_11_ffmod_1_res_add",
    },
    "conformer_11_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_11_convmod_1_input",
    },
    "conformer_11_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_11_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_11_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_11_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_11_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_11_convmod_1_dropout", "conformer_11_convmod_1_input"],
        "kind": "add",
    },
    "conformer_11_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_11_convmod_1_bn",
    },
    "conformer_11_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_11_ffmod_1_ff_2",
    },
    "conformer_11_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_11_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_11_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_11_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_11_ffmod_1_input": {"class": "copy", "from": "conformer_10_output"},
    "conformer_11_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_11_ffmod_1_input",
    },
    "conformer_11_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_11_ffmod_1_dropout", "conformer_11_ffmod_1_input"],
    },
    "conformer_11_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_11_ffmod_2_ff_2",
    },
    "conformer_11_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_11_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_11_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_11_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_11_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_11_mhsamod_res_add",
    },
    "conformer_11_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_11_ffmod_2_input",
    },
    "conformer_11_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_11_ffmod_2_dropout", "conformer_11_ffmod_2_input"],
    },
    "conformer_11_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_11_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_11_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_11_mhsamod_att_linear",
    },
    "conformer_11_mhsamod_input": {
        "class": "copy",
        "from": "conformer_11_convmod_1_res_add",
    },
    "conformer_11_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_11_mhsamod_input",
    },
    "conformer_11_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_11_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_11_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_11_mhsamod_dropout", "conformer_11_mhsamod_input"],
        "kind": "add",
    },
    "conformer_11_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_11_mhsamod_ln",
        "key_shift": "conformer_11_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_11_output": {
        "class": "layer_norm",
        "from": "conformer_11_ffmod_2_res_add",
    },
    "conformer_12_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_12_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_12_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_12_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_12_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_12_convmod_1_pointwise_conv_2",
    },
    "conformer_12_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_12_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_12_convmod_1_input": {
        "class": "copy",
        "from": "conformer_12_ffmod_1_res_add",
    },
    "conformer_12_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_12_convmod_1_input",
    },
    "conformer_12_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_12_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_12_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_12_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_12_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_12_convmod_1_dropout", "conformer_12_convmod_1_input"],
        "kind": "add",
    },
    "conformer_12_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_12_convmod_1_bn",
    },
    "conformer_12_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_12_ffmod_1_ff_2",
    },
    "conformer_12_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_12_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_12_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_12_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_12_ffmod_1_input": {"class": "copy", "from": "conformer_11_output"},
    "conformer_12_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_12_ffmod_1_input",
    },
    "conformer_12_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_12_ffmod_1_dropout", "conformer_12_ffmod_1_input"],
    },
    "conformer_12_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_12_ffmod_2_ff_2",
    },
    "conformer_12_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_12_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_12_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_12_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_12_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_12_mhsamod_res_add",
    },
    "conformer_12_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_12_ffmod_2_input",
    },
    "conformer_12_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_12_ffmod_2_dropout", "conformer_12_ffmod_2_input"],
    },
    "conformer_12_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_12_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_12_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_12_mhsamod_att_linear",
    },
    "conformer_12_mhsamod_input": {
        "class": "copy",
        "from": "conformer_12_convmod_1_res_add",
    },
    "conformer_12_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_12_mhsamod_input",
    },
    "conformer_12_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_12_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_12_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_12_mhsamod_dropout", "conformer_12_mhsamod_input"],
        "kind": "add",
    },
    "conformer_12_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_12_mhsamod_ln",
        "key_shift": "conformer_12_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_12_output": {
        "class": "layer_norm",
        "from": "conformer_12_ffmod_2_res_add",
    },
    "conformer_1_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_1_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_1_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_1_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_1_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_1_convmod_1_pointwise_conv_2",
    },
    "conformer_1_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_1_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_1_convmod_1_input": {
        "class": "copy",
        "from": "conformer_1_ffmod_1_res_add",
    },
    "conformer_1_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_1_convmod_1_input",
    },
    "conformer_1_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_1_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_1_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_1_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_1_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_1_convmod_1_dropout", "conformer_1_convmod_1_input"],
        "kind": "add",
    },
    "conformer_1_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_1_convmod_1_bn",
    },
    "conformer_1_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_1_ffmod_1_ff_2",
    },
    "conformer_1_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_1_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_1_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_1_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_1_ffmod_1_input": {"class": "copy", "from": "vgg_frontend_dropout"},
    "conformer_1_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_1_ffmod_1_input",
    },
    "conformer_1_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_1_ffmod_1_dropout", "conformer_1_ffmod_1_input"],
    },
    "conformer_1_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_1_ffmod_2_ff_2",
    },
    "conformer_1_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_1_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_1_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_1_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_1_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_1_mhsamod_res_add",
    },
    "conformer_1_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_1_ffmod_2_input",
    },
    "conformer_1_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_1_ffmod_2_dropout", "conformer_1_ffmod_2_input"],
    },
    "conformer_1_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_1_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_1_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_1_mhsamod_att_linear",
    },
    "conformer_1_mhsamod_input": {
        "class": "copy",
        "from": "conformer_1_convmod_1_res_add",
    },
    "conformer_1_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_1_mhsamod_input",
    },
    "conformer_1_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_1_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_1_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_1_mhsamod_dropout", "conformer_1_mhsamod_input"],
        "kind": "add",
    },
    "conformer_1_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_1_mhsamod_ln",
        "key_shift": "conformer_1_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_1_output": {
        "class": "layer_norm",
        "from": "conformer_1_ffmod_2_res_add",
    },
    "conformer_2_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_2_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_2_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_2_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_2_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_2_convmod_1_pointwise_conv_2",
    },
    "conformer_2_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_2_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_2_convmod_1_input": {
        "class": "copy",
        "from": "conformer_2_ffmod_1_res_add",
    },
    "conformer_2_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_2_convmod_1_input",
    },
    "conformer_2_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_2_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_2_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_2_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_2_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_2_convmod_1_dropout", "conformer_2_convmod_1_input"],
        "kind": "add",
    },
    "conformer_2_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_2_convmod_1_bn",
    },
    "conformer_2_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_2_ffmod_1_ff_2",
    },
    "conformer_2_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_2_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_2_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_2_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_2_ffmod_1_input": {"class": "copy", "from": "conformer_1_output"},
    "conformer_2_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_2_ffmod_1_input",
    },
    "conformer_2_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_2_ffmod_1_dropout", "conformer_2_ffmod_1_input"],
    },
    "conformer_2_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_2_ffmod_2_ff_2",
    },
    "conformer_2_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_2_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_2_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_2_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_2_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_2_mhsamod_res_add",
    },
    "conformer_2_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_2_ffmod_2_input",
    },
    "conformer_2_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_2_ffmod_2_dropout", "conformer_2_ffmod_2_input"],
    },
    "conformer_2_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_2_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_2_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_2_mhsamod_att_linear",
    },
    "conformer_2_mhsamod_input": {
        "class": "copy",
        "from": "conformer_2_convmod_1_res_add",
    },
    "conformer_2_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_2_mhsamod_input",
    },
    "conformer_2_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_2_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_2_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_2_mhsamod_dropout", "conformer_2_mhsamod_input"],
        "kind": "add",
    },
    "conformer_2_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_2_mhsamod_ln",
        "key_shift": "conformer_2_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_2_output": {
        "class": "layer_norm",
        "from": "conformer_2_ffmod_2_res_add",
    },
    "conformer_3_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_3_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_3_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_3_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_3_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_3_convmod_1_pointwise_conv_2",
    },
    "conformer_3_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_3_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_3_convmod_1_input": {
        "class": "copy",
        "from": "conformer_3_ffmod_1_res_add",
    },
    "conformer_3_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_3_convmod_1_input",
    },
    "conformer_3_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_3_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_3_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_3_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_3_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_3_convmod_1_dropout", "conformer_3_convmod_1_input"],
        "kind": "add",
    },
    "conformer_3_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_3_convmod_1_bn",
    },
    "conformer_3_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_3_ffmod_1_ff_2",
    },
    "conformer_3_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_3_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_3_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_3_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_3_ffmod_1_input": {"class": "copy", "from": "conformer_2_output"},
    "conformer_3_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_3_ffmod_1_input",
    },
    "conformer_3_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_3_ffmod_1_dropout", "conformer_3_ffmod_1_input"],
    },
    "conformer_3_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_3_ffmod_2_ff_2",
    },
    "conformer_3_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_3_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_3_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_3_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_3_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_3_mhsamod_res_add",
    },
    "conformer_3_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_3_ffmod_2_input",
    },
    "conformer_3_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_3_ffmod_2_dropout", "conformer_3_ffmod_2_input"],
    },
    "conformer_3_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_3_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_3_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_3_mhsamod_att_linear",
    },
    "conformer_3_mhsamod_input": {
        "class": "copy",
        "from": "conformer_3_convmod_1_res_add",
    },
    "conformer_3_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_3_mhsamod_input",
    },
    "conformer_3_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_3_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_3_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_3_mhsamod_dropout", "conformer_3_mhsamod_input"],
        "kind": "add",
    },
    "conformer_3_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_3_mhsamod_ln",
        "key_shift": "conformer_3_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_3_output": {
        "class": "layer_norm",
        "from": "conformer_3_ffmod_2_res_add",
    },
    "conformer_4_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_4_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_4_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_4_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_4_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_4_convmod_1_pointwise_conv_2",
    },
    "conformer_4_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_4_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_4_convmod_1_input": {
        "class": "copy",
        "from": "conformer_4_ffmod_1_res_add",
    },
    "conformer_4_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_4_convmod_1_input",
    },
    "conformer_4_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_4_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_4_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_4_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_4_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_4_convmod_1_dropout", "conformer_4_convmod_1_input"],
        "kind": "add",
    },
    "conformer_4_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_4_convmod_1_bn",
    },
    "conformer_4_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_4_ffmod_1_ff_2",
    },
    "conformer_4_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_4_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_4_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_4_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_4_ffmod_1_input": {"class": "copy", "from": "conformer_3_output"},
    "conformer_4_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_4_ffmod_1_input",
    },
    "conformer_4_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_4_ffmod_1_dropout", "conformer_4_ffmod_1_input"],
    },
    "conformer_4_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_4_ffmod_2_ff_2",
    },
    "conformer_4_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_4_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_4_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_4_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_4_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_4_mhsamod_res_add",
    },
    "conformer_4_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_4_ffmod_2_input",
    },
    "conformer_4_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_4_ffmod_2_dropout", "conformer_4_ffmod_2_input"],
    },
    "conformer_4_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_4_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_4_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_4_mhsamod_att_linear",
    },
    "conformer_4_mhsamod_input": {
        "class": "copy",
        "from": "conformer_4_convmod_1_res_add",
    },
    "conformer_4_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_4_mhsamod_input",
    },
    "conformer_4_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_4_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_4_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_4_mhsamod_dropout", "conformer_4_mhsamod_input"],
        "kind": "add",
    },
    "conformer_4_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_4_mhsamod_ln",
        "key_shift": "conformer_4_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_4_output": {
        "class": "layer_norm",
        "from": "conformer_4_ffmod_2_res_add",
    },
    "conformer_5_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_5_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_5_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_5_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_5_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_5_convmod_1_pointwise_conv_2",
    },
    "conformer_5_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_5_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_5_convmod_1_input": {
        "class": "copy",
        "from": "conformer_5_ffmod_1_res_add",
    },
    "conformer_5_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_5_convmod_1_input",
    },
    "conformer_5_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_5_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_5_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_5_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_5_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_5_convmod_1_dropout", "conformer_5_convmod_1_input"],
        "kind": "add",
    },
    "conformer_5_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_5_convmod_1_bn",
    },
    "conformer_5_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_5_ffmod_1_ff_2",
    },
    "conformer_5_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_5_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_5_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_5_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_5_ffmod_1_input": {"class": "copy", "from": "conformer_4_output"},
    "conformer_5_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_5_ffmod_1_input",
    },
    "conformer_5_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_5_ffmod_1_dropout", "conformer_5_ffmod_1_input"],
    },
    "conformer_5_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_5_ffmod_2_ff_2",
    },
    "conformer_5_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_5_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_5_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_5_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_5_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_5_mhsamod_res_add",
    },
    "conformer_5_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_5_ffmod_2_input",
    },
    "conformer_5_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_5_ffmod_2_dropout", "conformer_5_ffmod_2_input"],
    },
    "conformer_5_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_5_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_5_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_5_mhsamod_att_linear",
    },
    "conformer_5_mhsamod_input": {
        "class": "copy",
        "from": "conformer_5_convmod_1_res_add",
    },
    "conformer_5_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_5_mhsamod_input",
    },
    "conformer_5_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_5_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_5_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_5_mhsamod_dropout", "conformer_5_mhsamod_input"],
        "kind": "add",
    },
    "conformer_5_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_5_mhsamod_ln",
        "key_shift": "conformer_5_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_5_output": {
        "class": "layer_norm",
        "from": "conformer_5_ffmod_2_res_add",
    },
    "conformer_6_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_6_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_6_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_6_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_6_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_6_convmod_1_pointwise_conv_2",
    },
    "conformer_6_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_6_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_6_convmod_1_input": {
        "class": "copy",
        "from": "conformer_6_ffmod_1_res_add",
    },
    "conformer_6_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_6_convmod_1_input",
    },
    "conformer_6_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_6_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_6_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_6_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_6_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_6_convmod_1_dropout", "conformer_6_convmod_1_input"],
        "kind": "add",
    },
    "conformer_6_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_6_convmod_1_bn",
    },
    "conformer_6_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_6_ffmod_1_ff_2",
    },
    "conformer_6_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_6_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_6_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_6_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_6_ffmod_1_input": {"class": "copy", "from": "conformer_5_output"},
    "conformer_6_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_6_ffmod_1_input",
    },
    "conformer_6_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_6_ffmod_1_dropout", "conformer_6_ffmod_1_input"],
    },
    "conformer_6_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_6_ffmod_2_ff_2",
    },
    "conformer_6_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_6_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_6_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_6_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_6_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_6_mhsamod_res_add",
    },
    "conformer_6_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_6_ffmod_2_input",
    },
    "conformer_6_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_6_ffmod_2_dropout", "conformer_6_ffmod_2_input"],
    },
    "conformer_6_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_6_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_6_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_6_mhsamod_att_linear",
    },
    "conformer_6_mhsamod_input": {
        "class": "copy",
        "from": "conformer_6_convmod_1_res_add",
    },
    "conformer_6_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_6_mhsamod_input",
    },
    "conformer_6_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_6_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_6_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_6_mhsamod_dropout", "conformer_6_mhsamod_input"],
        "kind": "add",
    },
    "conformer_6_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_6_mhsamod_ln",
        "key_shift": "conformer_6_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_6_output": {
        "class": "layer_norm",
        "from": "conformer_6_ffmod_2_res_add",
    },
    "conformer_7_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_7_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_7_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_7_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_7_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_7_convmod_1_pointwise_conv_2",
    },
    "conformer_7_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_7_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_7_convmod_1_input": {
        "class": "copy",
        "from": "conformer_7_ffmod_1_res_add",
    },
    "conformer_7_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_7_convmod_1_input",
    },
    "conformer_7_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_7_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_7_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_7_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_7_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_7_convmod_1_dropout", "conformer_7_convmod_1_input"],
        "kind": "add",
    },
    "conformer_7_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_7_convmod_1_bn",
    },
    "conformer_7_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_7_ffmod_1_ff_2",
    },
    "conformer_7_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_7_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_7_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_7_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_7_ffmod_1_input": {"class": "copy", "from": "conformer_6_output"},
    "conformer_7_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_7_ffmod_1_input",
    },
    "conformer_7_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_7_ffmod_1_dropout", "conformer_7_ffmod_1_input"],
    },
    "conformer_7_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_7_ffmod_2_ff_2",
    },
    "conformer_7_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_7_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_7_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_7_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_7_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_7_mhsamod_res_add",
    },
    "conformer_7_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_7_ffmod_2_input",
    },
    "conformer_7_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_7_ffmod_2_dropout", "conformer_7_ffmod_2_input"],
    },
    "conformer_7_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_7_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_7_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_7_mhsamod_att_linear",
    },
    "conformer_7_mhsamod_input": {
        "class": "copy",
        "from": "conformer_7_convmod_1_res_add",
    },
    "conformer_7_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_7_mhsamod_input",
    },
    "conformer_7_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_7_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_7_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_7_mhsamod_dropout", "conformer_7_mhsamod_input"],
        "kind": "add",
    },
    "conformer_7_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_7_mhsamod_ln",
        "key_shift": "conformer_7_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_7_output": {
        "class": "layer_norm",
        "from": "conformer_7_ffmod_2_res_add",
    },
    "conformer_8_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_8_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_8_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_8_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_8_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_8_convmod_1_pointwise_conv_2",
    },
    "conformer_8_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_8_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_8_convmod_1_input": {
        "class": "copy",
        "from": "conformer_8_ffmod_1_res_add",
    },
    "conformer_8_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_8_convmod_1_input",
    },
    "conformer_8_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_8_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_8_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_8_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_8_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_8_convmod_1_dropout", "conformer_8_convmod_1_input"],
        "kind": "add",
    },
    "conformer_8_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_8_convmod_1_bn",
    },
    "conformer_8_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_8_ffmod_1_ff_2",
    },
    "conformer_8_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_8_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_8_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_8_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_8_ffmod_1_input": {"class": "copy", "from": "conformer_7_output"},
    "conformer_8_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_8_ffmod_1_input",
    },
    "conformer_8_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_8_ffmod_1_dropout", "conformer_8_ffmod_1_input"],
    },
    "conformer_8_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_8_ffmod_2_ff_2",
    },
    "conformer_8_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_8_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_8_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_8_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_8_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_8_mhsamod_res_add",
    },
    "conformer_8_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_8_ffmod_2_input",
    },
    "conformer_8_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_8_ffmod_2_dropout", "conformer_8_ffmod_2_input"],
    },
    "conformer_8_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_8_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_8_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_8_mhsamod_att_linear",
    },
    "conformer_8_mhsamod_input": {
        "class": "copy",
        "from": "conformer_8_convmod_1_res_add",
    },
    "conformer_8_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_8_mhsamod_input",
    },
    "conformer_8_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_8_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_8_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_8_mhsamod_dropout", "conformer_8_mhsamod_input"],
        "kind": "add",
    },
    "conformer_8_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_8_mhsamod_ln",
        "key_shift": "conformer_8_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_8_output": {
        "class": "layer_norm",
        "from": "conformer_8_ffmod_2_res_add",
    },
    "conformer_9_convmod_1_bn": {
        "class": "batch_norm",
        "delay_sample_update": True,
        "epsilon": 1e-05,
        "from": "conformer_9_convmod_1_depthwise_conv",
        "momentum": 0.1,
        "update_sample_only_in_training": True,
    },
    "conformer_9_convmod_1_depthwise_conv": {
        "L2": 5e-06,
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": "conformer_9_convmod_1_glu",
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "conformer_9_convmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_9_convmod_1_pointwise_conv_2",
    },
    "conformer_9_convmod_1_glu": {
        "activation": None,
        "class": "gating",
        "from": "conformer_9_convmod_1_pointwise_conv_1",
        "gate_activation": "sigmoid",
    },
    "conformer_9_convmod_1_input": {
        "class": "copy",
        "from": "conformer_9_ffmod_1_res_add",
    },
    "conformer_9_convmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_9_convmod_1_input",
    },
    "conformer_9_convmod_1_pointwise_conv_1": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_9_convmod_1_ln",
        "n_out": 1024,
    },
    "conformer_9_convmod_1_pointwise_conv_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_9_convmod_1_swish",
        "n_out": 512,
    },
    "conformer_9_convmod_1_res_add": {
        "class": "combine",
        "from": ["conformer_9_convmod_1_dropout", "conformer_9_convmod_1_input"],
        "kind": "add",
    },
    "conformer_9_convmod_1_swish": {
        "activation": "swish",
        "class": "activation",
        "from": "conformer_9_convmod_1_bn",
    },
    "conformer_9_ffmod_1_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_9_ffmod_1_ff_2",
    },
    "conformer_9_ffmod_1_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_9_ffmod_1_ln",
        "n_out": 2048,
    },
    "conformer_9_ffmod_1_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_9_ffmod_1_ff_1",
        "n_out": 512,
    },
    "conformer_9_ffmod_1_input": {"class": "copy", "from": "conformer_8_output"},
    "conformer_9_ffmod_1_ln": {
        "class": "layer_norm",
        "from": "conformer_9_ffmod_1_input",
    },
    "conformer_9_ffmod_1_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_9_ffmod_1_dropout", "conformer_9_ffmod_1_input"],
    },
    "conformer_9_ffmod_2_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_9_ffmod_2_ff_2",
    },
    "conformer_9_ffmod_2_ff_1": {
        "L2": 5e-06,
        "activation": "swish",
        "class": "linear",
        "from": "conformer_9_ffmod_2_ln",
        "n_out": 2048,
    },
    "conformer_9_ffmod_2_ff_2": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "dropout": 0.1,
        "from": "conformer_9_ffmod_2_ff_1",
        "n_out": 512,
    },
    "conformer_9_ffmod_2_input": {
        "class": "copy",
        "from": "conformer_9_mhsamod_res_add",
    },
    "conformer_9_ffmod_2_ln": {
        "class": "layer_norm",
        "from": "conformer_9_ffmod_2_input",
    },
    "conformer_9_ffmod_2_res_add": {
        "class": "eval",
        "eval": "0.5 * source(0) + source(1)",
        "from": ["conformer_9_ffmod_2_dropout", "conformer_9_ffmod_2_input"],
    },
    "conformer_9_mhsamod_att_linear": {
        "L2": 5e-06,
        "activation": None,
        "class": "linear",
        "from": "conformer_9_mhsamod_self_attention",
        "n_out": 512,
        "with_bias": False,
    },
    "conformer_9_mhsamod_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "conformer_9_mhsamod_att_linear",
    },
    "conformer_9_mhsamod_input": {
        "class": "copy",
        "from": "conformer_9_convmod_1_res_add",
    },
    "conformer_9_mhsamod_ln": {
        "class": "layer_norm",
        "from": "conformer_9_mhsamod_input",
    },
    "conformer_9_mhsamod_rel_pos_enc": {
        "class": "relative_positional_encoding",
        "clipping": 32,
        "from": "conformer_9_mhsamod_ln",
        "n_out": 64,
    },
    "conformer_9_mhsamod_res_add": {
        "class": "combine",
        "from": ["conformer_9_mhsamod_dropout", "conformer_9_mhsamod_input"],
        "kind": "add",
    },
    "conformer_9_mhsamod_self_attention": {
        "attention_dropout": 0.1,
        "class": "self_attention",
        "from": "conformer_9_mhsamod_ln",
        "key_shift": "conformer_9_mhsamod_rel_pos_enc",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "conformer_9_output": {
        "class": "layer_norm",
        "from": "conformer_9_ffmod_2_res_add",
    },
    "encoder-output": {"class": "copy", "from": "conformer_12_output", "n_out": 512},
    "fast_bw": {
        "align_target": "hmm-monophone",
        "class": "fast_bw_factored",
        "from": [
            "multiply-scale_left",
            "multiply-scale_center",
            "multiply-scale_right",
        ],
        "hmm_opts": {"num_contexts": 42},
        "n_out": 168,
        "sprint_opts": {
            "numInstances": 1,
            "sprintConfigStr": "--config=/u/raissi/setups/librispeech/960h/work/i6_core/rasr/config/WriteRasrConfigJob.7RMD4CZ1gZh8/output/rasr.config",
            "sprintControlConfig": {"verbose": True},
            "sprintExecPath": "/work/tools/users/raissi/rasr/rasr_tf2/arch/linux-x86_64-standard/nn-trainer.linux-x86_64-standard",
            "usePythonSegmentOrder": False,
        },
        "tdp_scale": 0.1,
    },
    "left-output": {"class": "softmax", "from": "linear2-leftContext", "n_out": 42},
    "linear1-diphone": {
        "L2": 5e-06,
        "activation": "relu",
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": "encoder-output",
        "n_out": 544,
    },
    "linear1-leftContext": {
        "L2": 5e-06,
        "activation": "relu",
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": "encoder-output",
        "n_out": 512,
    },
    "linear1-triphone": {
        "L2": 5e-06,
        "activation": "relu",
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": "encoder-output",
        "n_out": 672,
    },
    "linear2-diphone": {
        "L2": 5e-06,
        "activation": "relu",
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": "linear1-diphone",
        "n_out": 544,
    },
    "linear2-leftContext": {
        "L2": 5e-06,
        "activation": "relu",
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": "linear1-leftContext",
        "n_out": 512,
    },
    "linear2-triphone": {
        "L2": 5e-06,
        "activation": "relu",
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": "linear1-triphone",
        "n_out": 672,
    },
    "multiply-scale_center": {
        "class": "combine",
        "eval": "am_scale*(safe_log(source(0)))",
        "eval_locals": {"am_scale": 0.3},
        "from": ["center-output"],
        "kind": "eval",
    },
    "multiply-scale_left": {
        "class": "combine",
        "eval": "am_scale*(safe_log(source(0)))",
        "eval_locals": {"am_scale": 0.1},
        "from": ["left-output"],
        "kind": "eval",
    },
    "multiply-scale_right": {
        "class": "combine",
        "eval": "am_scale*(safe_log(source(0)))",
        "eval_locals": {"am_scale": 0.1},
        "from": ["right-output"],
        "kind": "eval",
    },
    "output-bw_center": {
        "class": "copy",
        "from": "center-output",
        "loss": "via_layer",
        "loss_opts": {"align_layer": "fast_bw/center", "loss_wrt_to_act_in": "softmax"},
        "loss_scale": 1.0,
    },
    "output-bw_left": {
        "class": "copy",
        "from": "left-output",
        "loss": "via_layer",
        "loss_opts": {"align_layer": "fast_bw/left", "loss_wrt_to_act_in": "softmax"},
        "loss_scale": 1.0,
    },
    "output-bw_right": {
        "class": "copy",
        "from": "right-output",
        "loss": "via_layer",
        "loss_opts": {"align_layer": "fast_bw/right", "loss_wrt_to_act_in": "softmax"},
        "loss_scale": 1.0,
    },
    "right-output": {"class": "softmax", "from": "linear2-triphone", "n_out": 42},
    "specaug": {
        "class": "eval",
        "eval": "self.network.get_config().typed_value('transform')(source(0), network=self.network)",
        "from": "data",
    },
    "vgg_frontend_conv_1": {
        "L2": 0.01,
        "activation": "swish",
        "class": "conv",
        "filter_size": (3, 3),
        "from": "vgg_frontend_split_dims",
        "n_out": 32,
        "padding": "same",
        "with_bias": True,
    },
    "vgg_frontend_conv_2": {
        "L2": 0.01,
        "activation": "swish",
        "class": "conv",
        "filter_size": (3, 3),
        "from": "vgg_frontend_pool_1",
        "n_out": 64,
        "padding": "same",
        "strides": (2, 1),
        "with_bias": True,
    },
    "vgg_frontend_conv_3": {
        "L2": 0.01,
        "activation": "swish",
        "class": "conv",
        "filter_size": (3, 3),
        "from": "vgg_frontend_conv_2",
        "n_out": 64,
        "padding": "same",
        "strides": (2, 1),
        "with_bias": True,
    },
    "vgg_frontend_dropout": {
        "class": "copy",
        "dropout": 0.1,
        "from": "vgg_frontend_linear",
    },
    "vgg_frontend_linear": {
        "L2": 0.0001,
        "activation": None,
        "class": "linear",
        "from": "vgg_frontend_merge_dims",
        "n_out": 512,
        "with_bias": False,
    },
    "vgg_frontend_merge_dims": {
        "axes": "static",
        "class": "merge_dims",
        "from": "vgg_frontend_conv_3",
    },
    "vgg_frontend_pool_1": {
        "class": "pool",
        "from": "vgg_frontend_conv_1",
        "mode": "max",
        "padding": "same",
        "pool_size": (1, 2),
        "trainable": False,
    },
    "vgg_frontend_split_dims": {
        "axis": "F",
        "class": "split_dims",
        "dims": (-1, 1),
        "from": "specaug",
    },
}
num_epochs = 500
num_input = 50
optimizer = {"class": "nadam"}
optimizer_epsilon = 1e-08
save_interval = 1
target = "classes"
task = "train"
train = {
    "class": "ExternSprintDataset",
    "partitionEpoch": 20,
    "sprintConfigStr": "--config=rasr.train.config --*.LOGFILE=nn-trainer.train.log --*.TASK=1 ",
    "sprintTrainerExecPath": "/work/tools/users/raissi/rasr/rasr_tf2/arch/linux-x86_64-standard/nn-trainer.linux-x86_64-standard",
}
update_on_device = True
use_tensorflow = True
window = 1
config = {}

locals().update(**config)


def mask(x, axis, pos, max_amount):
    """
    :param tf.Tensor x: (batch,time,feature)
    :param int axis:
    :param tf.Tensor pos: (batch,)
    :param int max_amount: inclusive
    """
    import tensorflow as tf

    ndim = x.get_shape().ndims
    n_batch = tf.shape(x)[0]
    dim = tf.shape(x)[axis]
    # amount = tf.random_uniform(shape=(n_batch,), minval=1, maxval=max_amount + 1, dtype=tf.int32)
    amount = tf.random.uniform(
        shape=(n_batch,), minval=1, maxval=max_amount + 1, dtype=tf.int32
    )
    pos2 = tf.minimum(pos + amount, dim)
    idxs = tf.expand_dims(tf.range(0, dim), 0)  # (1,dim)
    pos_bc = tf.expand_dims(pos, 1)  # (batch,1)
    pos2_bc = tf.expand_dims(pos2, 1)  # (batch,1)
    cond = tf.logical_and(
        tf.greater_equal(idxs, pos_bc), tf.less(idxs, pos2_bc)
    )  # (batch,dim)
    cond = tf.reshape(
        cond, [tf.shape(x)[i] if i in (0, axis) else 1 for i in range(ndim)]
    )
    from TFUtil import where_bc

    x = where_bc(cond, 0.0, x)
    return x


def random_mask(x, axis, min_num, max_num, max_dims):
    """
    :param tf.Tensor x: (batch,time,feature)
    :param int axis:
    :param int|tf.Tensor min_num:
    :param int|tf.Tensor max_num: inclusive
    :param int max_dims: inclusive
    """
    import tensorflow as tf

    n_batch = tf.shape(x)[0]
    # num = tf.random_uniform(shape=(n_batch,), minval=min_num, maxval=max_num + 1, dtype=tf.int32)
    num = tf.random.uniform(
        shape=(n_batch,), minval=min_num, maxval=max_num + 1, dtype=tf.int32
    )
    # https://github.com/tensorflow/tensorflow/issues/9260
    # https://timvieira.github.io/blog/post/2014/08/01/gumbel-max-trick-and-weighted-reservoir-sampling/
    # z = -tf.log(-tf.log(tf.random_uniform((n_batch, tf.shape(x)[axis]), 0, 1)))
    z = -tf.math.log(
        -tf.math.log(tf.random.uniform((n_batch, tf.shape(x)[axis]), 0, 1))
    )

    ## if the time axis dim. is smaller than maxval - 1
    # num = tf.cond(tf.less(tf.shape(x)[axis], max_num), lambda: tf.random_uniform(shape=(n_batch,), minval=min_num, maxval=tf.shape(x)[axis] + 1, dtype=tf.int32), lambda: num)
    num = tf.cond(
        tf.less(tf.shape(x)[axis], max_num),
        lambda: tf.random.uniform(
            shape=(n_batch,),
            minval=min_num,
            maxval=tf.shape(x)[axis] + 1,
            dtype=tf.int32,
        ),
        lambda: num,
    )

    _, indices = tf.nn.top_k(z, tf.reduce_max(num))
    # indices should be sorted, and of shape (batch,num), entries (int32) in [0,dim)
    # indices = tf.Print(indices, ["indices", indices, tf.shape(indices)])
    _, x = tf.while_loop(
        cond=lambda i, _: tf.less(i, tf.reduce_max(num)),
        body=lambda i, x: (
            i + 1,
            tf.compat.v1.where(
                tf.less(i, num),
                mask(x, axis=axis, pos=indices[:, i], max_amount=max_dims),
                x,
            ),
        ),
        loop_vars=(0, x),
    )
    return x


def summary(name, x):
    """
    :param str name:
    :param tf.Tensor x: (batch,time,feature)
    """
    import tensorflow as tf

    # tf.summary.image wants [batch_size, height,  width, channels],
    # we have (batch, time, feature).
    img = tf.expand_dims(x, axis=3)  # (batch,time,feature,1)
    img = tf.transpose(img, [0, 2, 1, 3])  # (batch,feature,time,1)
    tf.summary.image(name, img, max_outputs=10)
    tf.summary.scalar("%s_max_abs" % name, tf.reduce_max(tf.abs(x)))
    mean = tf.reduce_mean(x)
    tf.summary.scalar("%s_mean" % name, mean)
    stddev = tf.sqrt(tf.reduce_mean(tf.square(x - mean)))
    tf.summary.scalar("%s_stddev" % name, stddev)
    tf.summary.histogram("%s_hist" % name, tf.reduce_max(tf.abs(x), axis=2))


def transform(x, network):
    import tensorflow as tf

    # summary("features", x)
    # x = tf.clip_by_value(x, -3.0, 3.0)
    # summary("features_clip", x)

    max_reps_time = network.get_config().typed_value("max_reps_time")
    min_reps_time = network.get_config().typed_value("min_reps_time")
    max_reps_feature = network.get_config().typed_value("max_reps_feature")
    min_reps_feature = network.get_config().typed_value("min_reps_feature")

    max_len_time = network.get_config().typed_value("max_len_time")
    max_len_feature = network.get_config().typed_value("max_len_feature")

    # number of repetitions for time masking
    if max_reps_time is None:
        max_reps_time = tf.maximum(
            tf.shape(x)[1] // (max_len_time or 20), 1
        )  # // 100, 1)
    if min_reps_time is None:
        min_reps_time = 1

    # number of repetitions for feature masking
    if max_reps_feature is None:
        max_reps_feature = 2
    if min_reps_feature is None:
        min_reps_feature = 1

    # length of time masking
    if max_len_time is None:
        max_len_time = 20
    # length of feature masking
    if max_len_feature is None:
        max_len_feature = tf.shape(x)[-1] // 5

    def get_masked():
        x_masked = x
        x_masked = random_mask(
            x_masked,
            axis=1,
            min_num=min_reps_time,
            max_num=max_reps_time,
            max_dims=max_len_time,
        )
        x_masked = random_mask(
            x_masked,
            axis=2,
            min_num=min_reps_feature,
            max_num=max_reps_feature,
            max_dims=max_len_feature,
        )
        # summary("features_mask", x_masked)
        return x_masked

    x = network.cond_on_train(get_masked, lambda: x)

    return x
